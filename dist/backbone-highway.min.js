!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("underscore"),require("backbone"),require("url-composer")):"function"==typeof define&&define.amd?define(["underscore","backbone","url-composer"],t):(e.Backbone=e.Backbone||{},e.Backbone.Highway=t(e._,e.Backbone,e.urlComposer))}(this,function(e,t,r){"use strict";function n(t){this.definition=e.extend({},u,t),this.configure()}e="default"in e?e.default:e,t="default"in t?t.default:t,r="default"in r?r.default:r;var a=function(){function t(e){return c[e]}function r(e,t){c[e]=t}function n(t){var r=t.get("name");if(e.has(u,r))throw new Error("[ highway ] Route named "+r+" already declared");u[r]=t}function a(t){if(t.path){var r=this.get("options");t.path=t.path.replace(r.root,"").replace(/^(\/|#)/,"")}return e.find(u,function(e){return t.name===e.get("name")||e.pathRegExp&&e.pathRegExp.test(t.path)})}function i(){var t={},r={};return e.forEach(u,function(e,r){t[e.get("path")]=r}),e.forEach(u,function(e,t){r[t]=e.get("action")}),e.extend({routes:t},r)}function o(){return h}function s(e){h=e}var u={},c={},h=null;return{get:t,set:r,save:n,find:a,getDefinitions:i,getLastRoute:o,setLastRoute:s}}(),i={create:function(){return new(t.Router.extend(a.getDefinitions()))},start:function(r){return t.History.started?null:t.history.start(e.pick(r,["pushState","hashChange","silent","root"]))},restart:function(){t.history.stop(),t.history.start()}},o={dispatch:function(t,r){var n=a.get("options"),i=n.dispatcher;if(e.isString(t)&&(t={name:t}),!i)throw new Error("[ highway ] Event '"+t.name+"' could not be triggered, missing dispatcher");r=t.params||r,console.log("Trigger event "+t.name+", params:",r),i.trigger(t.name,{params:r})},exec:function(t){var r=this,n=t.name,a=t.events,i=t.params;if(!e.isEmpty&&!e.isArray(a))throw new Error("[ highway ] Route events definition for "+n+" needs to be an Array");return e.isArray(a)||(a=[a]),Promise.all(e.map(a,function(t){return e.isFunction(t)?new Promise(function(e,r){return t({resolve:e,reject:r,params:i}),null}):(r.dispatch(t,i),Promise.resolve())}))}},s=["404"],u={name:null,path:null,action:null},c={trigger:!0,replace:!1};n.prototype={get:function(e){return this.definition[e]},set:function(e,t){this.definition[e]=t},parse:function(e){return r.build({path:this.get("path"),params:e})},configure:function(){var t=this.definition,n=t.name,a=t.path;a&&!e.includes(s,n)&&(e.isString(a)&&(a=a.replace(/^(\/|#)/,"")),this.pathRegExp=r.regex(a),this.set("path",a)),this.set("action",this.getActionWrapper())},execute:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];return this.get("action").apply(void 0,e)},getActionWrapper:function(){var e=this.definition,t=e.name,n=e.path,a=e.action,i=e.before,s=e.after;return function(){for(var e=[],u=arguments.length;u--;)e[u]=arguments[u];var c=r.params(n,e);return new Promise(function(e,r){return i?o.exec({name:t,events:i,params:c}).then(function(){return Promise.resolve(a({resolve:e,reject:r,params:c}))},function(){return r(new Error('[ backbone-highway ] Route "'+t+'" was rejected by a "before" middleware'))}):Promise.resolve(a({resolve:e,reject:r,params:c}))}).then(function(e){return!s||o.exec({name:t,events:s,params:c})}).catch(function(e){console.error("caught action error",e)})}},getNavigateOptions:function(t){return e.extend({},c,e.pick(t,["trigger","replace"]))}};var h={pushState:!0,root:"",hashChange:!0,silent:!1,debug:!1,dispatcher:null},f=function(){var e=a.find({name:"404"});e&&e.execute()};return{start:function(t){t=e.extend({},h,t),a.set("options",t),this.router=i.create(),i.start(t)||t.silent||f()},route:function(e){var t=new n(e);a.save(t),this.router&&t.get("path")&&this.router.route(t.get("path"),t.get("name"),t.get("action"))},go:function(t){if(!e.isString(t)&&!e.isObject(t))throw new Error('[ highway.go ] Navigate option needs to be a string or an object, got "'+t+'"');if(e.isObject(t)&&!t.name&&!t.path)throw new Error('[ highway.go ] Navigate object is missing a "name" or "path" key');e.isString(t)&&(t={name:t});var r=a.find(t);if(!r)return f(),!1;t.path||(t.path=r.parse(t.args||t.params)),this.router.navigate(t.path,r.getNavigateOptions(t));var n=a.getLastRoute();return t.force&&n&&r.get("name")===n.get("name")&&this.reload(),a.setLastRoute(r),!0},reload:i.restart,restart:i.restart,store:a}});
